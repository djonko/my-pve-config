version: "3.8"
secrets:
  DB_ROOT_PWD:
    file: /opt/data-etc/nginx/db_root_pwd.secret.txt
  MYSQL_PWD:
    file: /opt/data-etc/nginx/db_pwd.secret.txt
  CONFIG_SQLPWD:
    file: /opt/data-etc/nginx/mysql.sqlpwd

services:
  db_nginx_crds:
    image: jc21/mariadb-aria:10.11.5
    container_name: db_nginx_crds
    restart: always
    env_file:
      - "/opt/data-etc/nginx/run.env"
    security_opt:
      - no-new-privileges:true
    labels:
      - "docker-volume-backup.stop-during-backup=true"
      - "com.centurylinklabs.watchtower.scope=toUpdateScope"
      - docker-volume-backup.archive-pre=/bin/sh -c 'mysqldump --defaults-extra-file=/run/secrets/CONFIG_SQLPWD --all-databases > /var/lib/allsqldump/backup-nginxcrds$(date +\%Y\%m\%d).sql'
    environment:
      MYSQL_ROOT_PASSWORD__FILE: run/secrets/DB_ROOT_PWD
      MYSQL_DATABASE: "${NG_DB}"
      MYSQL_USER: "${NG_USER}"
      MYSQL_PASSWORD__FILE: run/secrets/MYSQL_PWD
      TZ: "America/Toronto"
    volumes:
      - "/opt/data-docker/nginx_crds/mysql_nginx:/var/lib/mysql"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - "/opt/data-docker/nginx_crds/dump_dir:/var/lib/allsqldump"
    secrets:
      - MYSQL_PWD
      - DB_ROOT_PWD
      - CONFIG_SQLPWD
    networks:
      crowdsec_proxy:
        ipv4_address: 172.10.10.2

  nginx_proxy_crds:
    container_name: nginx_proxy_crds
    restart: unless-stopped
    image: "lepresidente/nginx-proxy-manager:latest"
    security_opt:
      - no-new-privileges:true
    env_file:
      - "/opt/data-etc/nginx/run.env"
    labels:
      - "docker-volume-backup.stop-during-backup=true"
      - "com.centurylinklabs.watchtower.scope=toUpdateScope"
    ports:
      - '8200:8080'
      - '8201:8181'
      - '9200:4443'
      - '443:4443'
    environment:
      DB_MYSQL_HOST: "db_nginx_crds"
      DB_MYSQL_PORT: "3306"
      DB_MYSQL_USER: "${NG_USER}"
      DB_MYSQL_PASSWORD: "${MYSQL_PWD}"
      DB_MYSQL_NAME: "${NG_DB}"
      #DISABLE_IPV6: 'true'
      DISABLE_IPV6: "1"
      TZ: "America/Toronto"
    depends_on:
      - db_nginx_crds
    volumes:
      - "/opt/data-docker/nginx_crds/nginx_proxy:/data"
      - "/opt/data-docker/nginx_crds/nginx_letsencrypt:/etc/letsencrypt"
      - "/opt/data-docker/nginx_crds/nginx_crowdsec/templates:/templates"
    secrets:
      - MYSQL_PWD
    networks:
      crowdsec_proxy:
        ipv4_address: 172.10.10.3

  crowdsec:
    image: "crowdsecurity/crowdsec:latest"
    container_name: crowdsec
    expose:
      - "8080"
    ports:
      - "8300:8080"
    environment:
      PGID: "1000"
    labels:
      - "docker-volume-backup.stop-during-backup=true"
      - "com.centurylinklabs.watchtower.scope=toUpdateScope"
    volumes:
      - "/opt/data-docker/crowdsec/data:/var/lib/crowdsec/data"
      - "/opt/data-docker/crowdsec/config:/etc/crowdsec"
      - "/var/log/auth.log:/var/log/auth.log:ro"
      - "/opt/data-docker/nginx_crds/nginx_proxy/logs:/var/log/nginx"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    restart: unless-stopped
    networks:
      crowdsec_proxy:
        ipv4_address: 172.10.10.4

  adminer_crds:
    image: adminer:latest
    container_name: adminer_crds
    security_opt:
      - no-new-privileges:true
    labels:
      - "docker-volume-backup.stop-during-backup=true"
    depends_on:
      - db_nginx_crds
    environment:
      ADMINER_DEFAULT_SERVER: db_nginx_crds
      MYSQL_ROOT_PASSWORD__FILE: run/secrets/DB_ROOT_PWD
    volumes:
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    secrets:
      - DB_ROOT_PWD
    restart: unless-stopped
    ports:
      - "8100:8080"
    networks:
      crowdsec_proxy:
        ipv4_address: 172.10.10.5

networks:
  crowdsec_proxy:
    ipam:
      driver: default
      config:
        - subnet: 172.10.10.0/24