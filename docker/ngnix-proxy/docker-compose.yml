version: '3.9'

secrets:
  DB_ROOT_PWD:
    file: /opt/data-etc/ngnix/db_root_pwd.secret.txt
  MYSQL_PWD:
    file: /opt/data-etc/ngnix/db_pwd.secret.txt
  CONFIG_SQLPWD:
    file: /opt/data-etc/ngnix/mysql.sqlpwd

services:
  ngnix_proxy:
    container_name: ngnix_proxy
    restart: unless-stopped
    image: 'jc21/nginx-proxy-manager:latest'
    security_opt:
      - no-new-privileges:true
    labels:
      - "docker-volume-backup.stop-during-backup=true"
      - "com.centurylinklabs.watchtower.scope=toUpdateScope"
    ports:
      - '8200:80'
      - '8201:81'
      - '9200:443'
      - '443:443'
    environment:
      DB_MYSQL_HOST: "db_ngnix"
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: "${NG_USER}"
      DB_MYSQL_PASSWORD__FILE: /run/secrets/MYSQL_PWD
      DB_MYSQL_NAME: "${NG_DB}"
      DISABLE_IPV6: 'true'
      TZ: "America/Toronto"
    depends_on:
      - db_ngnix
    volumes:
      - "/opt/data-adm-docker/volumes/ngnix_proxy:/data"
      - "/opt/data-adm-docker/volumes/ngnix_letsencrypt:/etc/letsencrypt"
    secrets:
      - MYSQL_PWD

  db_ngnix:
    build:
      context: .
    container_name: db_ngnix
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    labels:
      - "docker-volume-backup.stop-during-backup=true"
      - "com.centurylinklabs.watchtower.scope=toUpdateScope"
      - docker-volume-backup.archive-pre=/bin/sh -c 'mysqldump --defaults-extra-file=/run/secrets/CONFIG_SQLPWD --all-databases > /var/lib/allsqldump/backup-nginx$(date +\%Y\%m\%d).sql'

    environment:
      MYSQL_ROOT_PASSWORD__FILE: run/secrets/DB_ROOT_PWD
      MYSQL_DATABASE: "${NG_DB}"
      MYSQL_USER: "${NG_USER}"
      MYSQL_PASSWORD__FILE: run/secrets/MYSQL_PWD
      TZ: "America/Montreal"
    volumes:
      - "/opt/data-adm-docker/volumes/mysql_ngnix:/var/lib/mysql"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - "/opt/data-adm-docker/volumes/dump_dir:/var/lib/allsqldump"
    secrets:
      - MYSQL_PWD
      - DB_ROOT_PWD
      - CONFIG_SQLPWD

  adminer:
    build:
      context: .
      dockerfile: adminer.dockerfile
    container_name: adminer
    security_opt:
      - no-new-privileges:true
    labels:
      - "docker-volume-backup.stop-during-backup=true"
    depends_on:
      - db_ngnix
    environment:
      ADMINER_DEFAULT_SERVER: db_ngnix
      MYSQL_ROOT_PASSWORD__FILE: run/secrets/DB_ROOT_PWD
      TZ: "America/Montreal"
    secrets:
      - DB_ROOT_PWD
    restart: unless-stopped
    ports:
      - "8100:8080"